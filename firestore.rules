rules_version = '2';

// Helper function to check for Admin role
function isAdmin() {
  return request.auth != null && request.auth.token.email == 'kymt83091@gmail.com';
}

service cloud.firestore {
  match /databases/{database}/documents {

    // Products can be read by anyone, but only managed by an admin.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Promotional banner settings can be read by anyone, written by admin
    match /settings/promoBanner {
       allow read: if true;
       allow write: if isAdmin();
    }

    // Wallets:
    // - Users can create their own wallet (e.g., when accepting terms).
    // - Users can read their own wallet.
    // - Admins can read/write any wallet (for approvals/edits).
    // - A user can UPDATE their own wallet (for order placement transactions).
    match /wallets/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Top-Up Requests:
    // - Users can create their own requests.
    // - Users can read their own requests.
    // - Admins can read all requests and update their status.
    match /topUpRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Orders:
    // - Logged-in users can create their own orders.
    // - Logged-in users can read their own orders.
    // - Anyone can LIST orders (for public order tracking by Player ID).
    // - Admins can read/update any order.
    match /orders/{orderId} {
        allow list: if true; // Allow querying for the public tracking page
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update: if isAdmin();
        allow delete: if isAdmin();
    }
  }
}
