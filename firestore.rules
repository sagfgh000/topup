
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is an admin.
    // For this to work, you must create a collection named 'admins' and add a document 
    // where the document ID is the UID of the admin user.
    function isAdmin() {
      // Check if the user's UID exists in the 'admins' collection.
      // IMPORTANT: The admin email 'kymt83091@gmail.com' is checked on the client-side
      // in the layout, but for Firestore rules, we must rely on a server-side check.
      // You need to manually add your UID to the 'admins' collection in Firestore.
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Wallets:
    // - A user can create their own wallet for the first time.
    // - A user can read their own wallet.
    // - A user cannot update their own wallet directly (this is handled by server-side logic/admin actions).
    // - Admins can read and write to any wallet.
    match /wallets/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId; // Allow user to create their own wallet
      allow update: if isAdmin(); // Only admins can update balance
    }
    
    // Orders:
    // - Users can create their own orders if they are logged in.
    // - Users can read their own orders.
    // - Admins can read and update any order.
    match /orders/{orderId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin();
    }
    
    // TopUpRequests:
    // - Users can create their own top-up requests.
    // - Users can read their own top-up requests.
    // - Admins can read and update any request.
    match /topUpRequests/{requestId} {
       allow read: if request.auth.uid == resource.data.userId || isAdmin();
       allow create: if request.auth.uid == request.resource.data.userId;
       allow update: if isAdmin();
    }
    
    // Products:
    // - Anyone can read the product list.
    // - Only admins can create, update, or delete products.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Settings (e.g., promo banner)
    // - Anyone can read the settings.
    // - Only admins can change the settings.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Admins collection:
    // Only other admins should be able to see who is an admin.
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
  }
}
