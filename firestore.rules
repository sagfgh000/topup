rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }

    // Helper function to check for ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Products can be read by anyone, but only managed by admins.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // Settings can be read by anyone, but only written by admins.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }

    // Wallets:
    // - Users can create their own wallet (e.g. on first login/agreement).
    // - Users can read their own wallet.
    // - Wallet balance updates are handled by server-side logic (transactions)
    //   or by an admin directly. A user can update their own wallet
    //   if they are creating a new order.
    match /wallets/{userId} {
      allow read: if isOwner(userId) || isAdmin(request.auth.uid);
      allow create: if isOwner(userId);
      allow update: if isAdmin(request.auth.uid) || 
                      (isOwner(userId) && getAfter(/databases/$(database)/documents/orders/$(request.resource.id)) == null);
    }

    // Orders:
    // - Users can create their own orders.
    // - Users can only read their own orders.
    // - Admins can read and update any order.
    match /orders/{orderId} {
      allow read: if isOwner(get(/databases/$(database)/documents/orders/$(orderId)).data.userId) || isAdmin(request.auth.uid);
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isAdmin(request.auth.uid);
    }

    // TopUpRequests:
    // - Users can create their own top-up requests.
    // - Users cannot read any top-up requests (even their own) for privacy.
    // - Admins can read and update any request.
    match /topUpRequests/{requestId} {
      allow read, update: if isAdmin(request.auth.uid);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Admins collection can only be read/written by other admins.
    // (For future use, to manage who is an admin)
    match /admins/{userId} {
        allow read, write: if isAdmin(request.auth.uid);
    }
  }
}
